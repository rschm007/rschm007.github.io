@import "./_variables.scss";
@import "./_keyframes.scss";

@function if-important($important) {
    @return #{if($important, '!important', '')};
}

/*-----------------
text & fonts */


@mixin typography($size, $weight, $tracking, $leading) {
    font-size: $size;
    font-weight: $weight;
    letter-spacing: $tracking;
    line-height: $leading;
}

/* end text & fonts
-----------------
div sizing & flexbox */

@function if-important($important) {
    @return #{if($important, '!important', '')};
}

@mixin flex-wrap {
    display: flex;
    flex-wrap: wrap;
}

@mixin flex-direction($direction) {
    display: flex;
    flex-direction: $direction;
}

@mixin flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin flex-start {
    align-items: flex-start;
    text-align: left;
}

@mixin flex-end {
    display: flex;
    align-self: flex-end;
}

@mixin square-min-max($px) {
    min-width: $px;
    min-height: $px;
    width: $px;
    height: $px;
    max-width: $px;
    max-height: $px;
}

@mixin width-height ($width, $height, $important: false) {
    width: $width if-important($important);
    height: $height if-important($important);
}

@mixin max-width-height ($width, $height, $important: false) {
    max-width: $width if-important($important);
    max-height: $height if-important($important);
}

@mixin min-max-height ($min, $max) {
    min-height: $min;
    max-height: $max;
}

/* end div sizing
-----------------
borders & outlines */

@mixin no-border {
    outline: none;
    border: none;
}

/* end borders & outlines
-----------------
shadows */

@mixin drop-shadow-dark {
    filter: drop-shadow($light-shadow)
}

@mixin drop-shadow-subtle {
        filter: drop-shadow($subtle-shadow);
}

@mixin drop-shadow-bright {
    filter: drop-shadow(3px 3px 2px rgba(255, 255, 255, 0.7));
}

@mixin box-shadow-pink {
    box-shadow: 0 10px 100px -20px $neon-pink;
}
/* end shadows
-----------------
transforms, transitions & animations */

@mixin transition-ease-in-out($seconds) {
    -moz-transition: $seconds ease-in-out;
    -webkit-transition: $seconds ease-in-out;
    transition: $seconds ease-in-out;
}

// generic transform
@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
    @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
    @include transform(scale($scale));
}
// translate
@mixin translate ($x, $y) {
    @include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
    @include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
    -moz-transform-origin: $origin;
    -o-transform-origin: $origin;
    -ms-transform-origin: $origin;
    -webkit-transform-origin: $origin;
    transform-origin: $origin;
}

/* end transforms, transitions & animations
-----------------
filters, effects */

@mixin filter($effect, $scale) {
    -moz-filter: $effect ($scale);
    -webkit-filter: $effect ($scale);
    filter: $effect ($scale);
}
